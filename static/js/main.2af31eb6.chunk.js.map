{"version":3,"sources":["contexts/TransactionContext.tsx","firebaseInstance.ts","pages/LoginPage.tsx","components/TransactonItem.tsx","components/TransactionList.tsx","pages/SchedulePage.tsx","pages/ProfilePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialTransacitons","id","title","amount","transactionReducer","state","action","type","concat","transaction","filter","t","Error","TransactionStateContext","createContext","TransactionDispatchContext","TransactionNextIdContext","TransactionProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTransactionState","useContext","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","firestore","LoginPage","history","useHistory","onSocialLogin","e","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","push","window","alert","Title","Container","SocialButton","role","onClick","styled","div","button","TransactionItem","date","transactions","Row","Text","contentEditable","suppressContentEditableWarning","thousandSeparator","renderText","displayType","suffix","SubText","moment","format","balance","forEach","calcBalance","TransactionList","map","key","SchedulePage","style","fontSize","fontWeight","marginLeft","marginTop","marginBottom","display","ProfilePage","user","JSON","parse","localStorage","getItem","uid","color","signOut","App","React","useState","init","setInit","useEffect","onAuthStateChanged","userObj","displayName","setItem","stringify","removeItem","AppContainer","exact","path","component","Schedule","Profile","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af31eb6.chunk.js","sourcesContent":["import React, { useReducer, createContext, useRef, useContext } from 'react'\r\n\r\nexport interface ITransaction {\r\n    id: number;\r\n    title: string;\r\n    amount: number;\r\n    date?: Date;\r\n}\r\n\r\nconst initialTransacitons: ITransaction[] = [\r\n    {\r\n        id: 1,\r\n        title: \"Glasses\",\r\n        amount: -200000,\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Macbook Pro 16\",\r\n        amount: -500000,\r\n    }\r\n]\r\n\r\nfunction transactionReducer(state, action) {\r\n    switch (action.type) {\r\n        case \"CREATE\":\r\n            return state.concat(action.transaction)\r\n        case \"DELETE\":\r\n            return state.filter(t => t.id !== action.id)\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n}\r\n\r\nconst TransactionStateContext = createContext(null)\r\nconst TransactionDispatchContext = createContext(null)\r\nconst TransactionNextIdContext = createContext(null)\r\n\r\nexport function TransactionProvider({ children }) {\r\n    const [state, dispatch] = useReducer(transactionReducer, initialTransacitons)\r\n    const nextId = useRef(2)\r\n\r\n    return (\r\n        <TransactionStateContext.Provider value={state}>\r\n            <TransactionDispatchContext.Provider value={dispatch}>\r\n                <TransactionNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TransactionNextIdContext.Provider>\r\n            </TransactionDispatchContext.Provider>\r\n        </TransactionStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useTransactionState() {\r\n    return useContext(TransactionStateContext)\r\n}\r\n\r\nexport function useTransactionDispatch() {\r\n    return useContext(TransactionDispatchContext)\r\n}\r\n\r\nexport function useTransactionNextId() {\r\n    return useContext(TransactionNextIdContext)\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDKBY-3wsmdrY8xR61xxcOnPOkS-dJ00PI\",\r\n    authDomain: \"moneyflow-50d29.firebaseapp.com\",\r\n    projectId: \"moneyflow-50d29\",\r\n    storageBucket: \"moneyflow-50d29.appspot.com\",\r\n    messagingSenderId: \"613177909065\",\r\n    appId: \"1:613177909065:web:b686d025cd0a214cd20498\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore()","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { authService, firebaseInstance } from '../firebaseInstance';\r\n\r\nexport default function LoginPage() {\r\n  const history = useHistory();\r\n  async function onSocialLogin(e) {\r\n    const { name } = e.target;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    try {\r\n      await authService.signInWithPopup(provider);\r\n      history.push('/');\r\n    } catch (e) {\r\n      window.alert(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Title>Login</Title>\r\n      <Container>\r\n        <SocialButton role=\"button\" name=\"google\" onClick={onSocialLogin}>\r\n          Continue with Google\r\n        </SocialButton>\r\n        <SocialButton role=\"button\" name=\"github\" onClick={onSocialLogin}>\r\n          Continue with Github\r\n        </SocialButton>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: inline-block;\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  margin-left: 20px;\r\n  margin-top: 30px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nconst SocialButton = styled.button`\r\n  width: 200px;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  ITransaction,\r\n  useTransactionState,\r\n} from '../contexts/TransactionContext';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport moment from 'moment';\r\n\r\nexport default function TransactionItem(transaction: ITransaction) {\r\n  const { title, amount, date } = transaction;\r\n  const transactions = useTransactionState();\r\n\r\n  function calcBalance(): number {\r\n    let balance: number = 0;\r\n\r\n    transactions.forEach((t) => {\r\n      if (t.date <= date) balance += t.amount;\r\n    });\r\n\r\n    return balance;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Text contentEditable={true} suppressContentEditableWarning={true}>\r\n          {title}\r\n        </Text>\r\n        <CurrencyFormat\r\n          value={amount}\r\n          thousandSeparator={true}\r\n          renderText={(value) => <Text>{value}</Text>}\r\n          displayType={'text'}\r\n          suffix=\" KRW\"\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <SubText>\r\n          {date ? moment(date).format('YYYY.MM.DD') : 'Undefined'}\r\n        </SubText>\r\n        <CurrencyFormat\r\n          value={calcBalance()}\r\n          thousandSeparator={true}\r\n          renderText={(value) => <SubText>{value}</SubText>}\r\n          displayType={'text'}\r\n          suffix=\" KRW\"\r\n        />\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: 'Roboto', sans-serif;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst SubText = styled.div`\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.5);\r\n`;\r\n","import React from 'react';\r\nimport { useTransactionState } from '../contexts/TransactionContext';\r\nimport styled from 'styled-components';\r\nimport TransactionItem from './TransactonItem';\r\n\r\nexport default function TransactionList() {\r\n  const transactions = useTransactionState();\r\n\r\n  return (\r\n    <Container>\r\n      {transactions.map((transaction) => (\r\n        <TransactionItem {...transaction} key={transaction.id} />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from 'react';\r\nimport TransactionList from '../components/TransactionList';\r\n\r\nexport default function SchedulePage() {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          fontSize: 32,\r\n          fontWeight: 700,\r\n          marginLeft: 20,\r\n          marginTop: 30,\r\n          marginBottom: 30,\r\n          display: 'inline-block',\r\n        }}\r\n      >\r\n        Schedule\r\n      </div>\r\n      <TransactionList />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService } from '../firebaseInstance';\r\n\r\nexport default function ProfilePage() {\r\n  const user = JSON.parse(window.localStorage.getItem('user'));\r\n  const history = useHistory();\r\n\r\n  function onLogoutClick() {\r\n    authService.signOut();\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{user.name}</div>\r\n      <div>{user.uid}</div>\r\n      <div style={{ color: 'red' }} onClick={onLogoutClick}>\r\n        logout\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { TransactionProvider } from './contexts/TransactionContext';\nimport { authService } from './firebaseInstance';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Login, Profile, Schedule } from './pages/index.';\nimport styled from 'styled-components';\n\nexport default function App() {\n  const [init, setInit] = React.useState(false);\n\n  React.useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        const userObj = { name: user.displayName, uid: user.uid };\n        window.localStorage.setItem('user', JSON.stringify(userObj));\n      } else {\n        window.localStorage.removeItem('user');\n      }\n    });\n    setInit(true);\n  }, []);\n\n  return (\n    <TransactionProvider>\n      <AppContainer>\n        {init ? (\n          <Router>\n            <Switch>\n              {window.localStorage.getItem('user') ? (\n                <>\n                  <Route exact path=\"/\" component={Schedule} />\n                  <Route path=\"/profile\" component={Profile} />\n                </>\n              ) : (\n                <Route exact path=\"/\" component={Login} />\n              )}\n            </Switch>\n          </Router>\n        ) : (\n          <div>Initializing...</div>\n        )}\n      </AppContainer>\n    </TransactionProvider>\n  );\n}\n\nconst AppContainer = styled.div`\n  background-color: rgba(247, 246, 243, 0.5);\n  position: relative;\n  min-height: 100vh;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}